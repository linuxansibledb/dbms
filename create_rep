Шаги для создания и настройки репозитория hitech2023-app с использованием GitLab и директории kubernetes:
Шаг 1: Войдите в свою учетную запись на GitLab и создайте новый проект с названием `hitech2023-app`.
Шаг 2: Клонируйте репозиторий на локальную машину с помощью команды:
```
git clone git@gitlab.com:ваш-аккаунт/hitech2023-app.git
```
Шаг 3: В корневой директории репозитория `hitech2023-app`, создайте директорию `kubernetes` с помощью команды:
mkdir kubernetes
Шаг 4: Перейдите в директорию `kubernetes`:
```
cd kubernetes
`
Шаг 5: Создайте и загрузите манифесты исходного кода приложения в директорию `kubernetes` с помощью команды:
```
kubectl create -f <путь_к_манифестам>
Шаг 6: Поместите файлы манифестов в директорию `kubernetes` и добавьте их в репозиторий с помощью команды:
git add .
Шаг 7: Зафиксируйте изменения с комментарием, используя команды:
git commit -m "Добавлены манифесты для приложения Kubernetes"
Шаг 8: Загрузите изменения в удаленный репозиторий:
git push origin master
Шаг 9: Создайте новый репозиторий argocd для хранения информации о синхронизации с репозиторием kubernetes. Создайте его в том же проекте или в другом проекте GitLab. Пусть URL репозитория argocd будет `git@gitlab.com:ваш-аккаунт/hitech2023-argocd.git`. Может потребоваться настройка доступа к репозиторию для argocd.
Шаг 10: Клонируйте репозиторий argocd на локальную машину с помощью команды:

```
git clone git@gitlab.com:ваш-аккаунт/hitech2023-argocd.git
```

Шаг 11: Поместите файлы манифестов из репозитория hitech2023-app в директорию argocd.

Шаг 12: Добавьте и зафиксируйте изменения в репозитории argocd, используя команды:

```
git add .
git commit -m "Добавлены манифесты для argocd"
git push origin master
```

Теперь у вас есть репозиторий hitech2023-app на GitLab, содержащий исходный код приложения, и репозиторий argocd для синхронизации с argocd. Вы можете использовать argocd для развертывания и управления приложением с использованием манифестов из репозитория hitech2023-app.
